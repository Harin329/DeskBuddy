[{"C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\index.js":"1","C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\App.js":"2","C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\screens\\Dashboard.jsx":"4","C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\screens\\Social.jsx":"5","C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\screens\\Mail.jsx":"6","C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\screens\\Reservation.jsx":"7","C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\components\\reservation\\BookingsCalendar.jsx":"8","C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\config\\Constants.jsx":"9"},{"size":517,"mtime":1611896164605,"results":"10","hashOfConfig":"11"},{"size":814,"mtime":1613607777240,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1611896164605,"results":"13","hashOfConfig":"11"},{"size":694,"mtime":1613183798381,"results":"14","hashOfConfig":"11"},{"size":329,"mtime":1613183798382,"results":"15","hashOfConfig":"11"},{"size":323,"mtime":1613183798381,"results":"16","hashOfConfig":"11"},{"size":28660,"mtime":1613609040983,"results":"17","hashOfConfig":"11"},{"size":1090,"mtime":1613607777249,"results":"18","hashOfConfig":"11"},{"size":68,"mtime":1613607777250,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"175qwq0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\index.js",[],["41","42"],"C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\App.js",["43","44"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from './screens/Dashboard';\r\nimport Reservation from './screens/Reservation';\r\nimport Mail from './screens/Mail';\r\nimport Social from './screens/Social';\r\nimport BookingsCalendar from \"./components/reservation/BookingsCalendar\";\r\nimport './App.css';\r\nimport \"@fontsource/lato\"\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Route exact path=\"/\" component={Dashboard} />\r\n                <Route exact path=\"/reservation\" component={Reservation} />\r\n                <Route exact path=\"/mail\" component={Mail} />\r\n                <Route exact path=\"/social\" component={Social} />\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\screens\\Dashboard.jsx",[],"C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\screens\\Social.jsx",[],"C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\screens\\Mail.jsx",[],"C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\screens\\Reservation.jsx",["45","46","47"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, List, ListItem, ListItemIcon, Grid, Typography, TextField, MenuItem, Divider, Modal, IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DesktopMacIcon from '@material-ui/icons/DesktopMac';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Search from '../assets/search.png';\r\nimport Floorplan from '../assets/Location1.jpg';\r\nimport Endpoint from '../config/Constants'\r\n\r\nconst useStyles = makeStyles({\r\n    background: {\r\n        background: '#1E1E24',\r\n        flexGrow: 1,\r\n    },\r\n    actionButton: {\r\n        background: '#00ADEF',\r\n        borderRadius: 20,\r\n        color: 'white',\r\n        height: '50px',\r\n        padding: '0 30px',\r\n        marginTop: '10px',\r\n        marginBottom: '10px',\r\n        fontFamily: 'Lato',\r\n        fontWeight: 'bolder',\r\n        fontSize: 18\r\n    },\r\n    reserveButton: {\r\n        background: '#00ADEF',\r\n        borderRadius: 20,\r\n        color: 'white',\r\n        height: '50px',\r\n        padding: '0 20px',\r\n        marginTop: '5px',\r\n        marginBottom: '5px',\r\n        fontFamily: 'Lato',\r\n        fontWeight: 'bolder',\r\n        fontSize: 14,\r\n        boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\r\n    },\r\n    cancelButton: {\r\n        background: '#ba0000',\r\n        borderRadius: 30,\r\n        color: 'white',\r\n        height: '30px',\r\n        padding: '0 15px',\r\n        marginTop: '5px',\r\n        marginBottom: '5px',\r\n        fontFamily: 'Lato',\r\n        fontWeight: 'bolder',\r\n        fontSize: 14,\r\n        boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\r\n    },\r\n    titleText: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontFamily: 'Lato',\r\n        fontWeight: 'bold',\r\n        fontSize: 25\r\n    },\r\n    sectionText: {\r\n        color: 'white',\r\n        fontFamily: 'Lato',\r\n        fontWeight: 'bolder',\r\n        fontSize: 20\r\n    },\r\n    sectionTextModal: {\r\n        color: 'black',\r\n        fontFamily: 'Lato',\r\n        fontWeight: 'bolder',\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n    },\r\n    titleLines: {\r\n        backgroundColor: 'white',\r\n        height: '3px',\r\n    },\r\n    sectionSpacing: {\r\n        marginBottom: '29px'\r\n    },\r\n    inputBoxes: {\r\n        width: '90%',\r\n        backgroundColor: 'white',\r\n        borderRadius: 20,\r\n        marginTop: '10px',\r\n    },\r\n    officeText: {\r\n        color: 'black',\r\n        fontFamily: 'Lato',\r\n        fontSize: 16,\r\n        textAlign: 'center'\r\n    },\r\n    deskSectionText: {\r\n        color: 'black',\r\n        fontFamily: 'Lato',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n    },\r\n    FloorText: {\r\n        color: 'black',\r\n        fontFamily: 'Lato',\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n    },\r\n    confirmationModalText: {\r\n        color: 'black',\r\n        fontFamily: 'Lato',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center'\r\n    },\r\n    deskText: {\r\n        color: 'black',\r\n        fontFamily: 'Lato',\r\n        fontSize: 14,\r\n        display: 'inline'\r\n    },\r\n    paper: {\r\n        position: 'fixed',\r\n        top: '30%',\r\n        left: '35%',\r\n        width: '20%',\r\n        height: '30%',\r\n        backgroundColor: 'white',\r\n        padding: '30px',\r\n    },\r\n    floorplan: {\r\n        position: 'fixed',\r\n        top: '20%',\r\n        left: '30%',\r\n        width: '40%',\r\n        height: '50%',\r\n        backgroundColor: 'white',\r\n        padding: '30px',\r\n    },\r\n});\r\n\r\nfunction Reservation() {\r\n    const date = new Date();\r\n    const formattedDate = date.getFullYear() + \"-\" + appendLeadingZeroes(date.getMonth() + 1) + \"-\" + appendLeadingZeroes(date.getDate());\r\n\r\n    const classes = useStyles();\r\n    const [officeList, setOfficeList] = useState([]);\r\n    const [office, setOffice] = useState('All');\r\n    const [deskList, setDeskList] = useState([]);\r\n    const [floorList, setFloorList] = useState([]);\r\n    const [desk, setDesk] = useState('All');\r\n    const [from, setFrom] = useState(formattedDate);\r\n    const [to, setTo] = useState(formattedDate);\r\n    const [deskResults, setDeskResults] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [employeeCount, setEmployeeCount] = useState(0);\r\n    const [floorplan, setFloorplan] = useState(false);\r\n    const [officeDisabled, setOfficeDisabled] = useState(true);\r\n    const [confirmationDesk, setConfirmationDesk] = useState();\r\n\r\n    function appendLeadingZeroes(n) {\r\n        if (n <= 9) {\r\n            return \"0\" + n;\r\n        }\r\n        return n\r\n    }\r\n\r\n    useEffect(() => {\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(Endpoint + \"/office/getAllOffices\", requestOptions)\r\n            .then((response) => response.text())\r\n            .then(result => {\r\n                setOfficeList(JSON.parse(result));\r\n                // console.log(JSON.parse(result));\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        search();\r\n\r\n    }, []);\r\n\r\n\r\n    const handleOpen = (option) => {\r\n        setConfirmationDesk(option);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleFloorplanOpen = () => {\r\n        setFloorplan(true);\r\n    };\r\n\r\n    const handleFloorplanClose = () => {\r\n        setFloorplan(false);\r\n    };\r\n\r\n    const handleOfficeChange = (event) => {\r\n        setOffice(event.target.value);\r\n\r\n        if (event.target.value !== 'All') {\r\n            const params = event.target.value.split(['-']);\r\n\r\n            console.log(params[0])\r\n            console.log(params[1])\r\n\r\n            var requestOptions = {\r\n                method: 'GET',\r\n                redirect: 'follow'\r\n            };\r\n\r\n            fetch(Endpoint + \"/desk/getDesksByOffice/\" + params[0] + \"/\" + params[1], requestOptions)\r\n                .then((response) => response.text())\r\n                .then(result => {\r\n                    setDeskList(JSON.parse(result));\r\n                    // console.log(JSON.parse(result));\r\n                })\r\n                .catch(error => console.log('error', error));\r\n\r\n            fetch(Endpoint + \"/floor/getFloorsByOffice/\" + params[0] + \"/\" + params[1], requestOptions)\r\n                .then((response) => response.text())\r\n                .then(result => {\r\n                    const res = JSON.parse(result)\r\n                    setFloorList(res);\r\n                    // console.log(res);\r\n                    if (res.length > 0) {\r\n                        setOfficeDisabled(false);\r\n                    } else {\r\n                        setOfficeDisabled(true);\r\n                    }\r\n                })\r\n                .catch(error => console.log('error', error));\r\n        } else {\r\n            setOfficeDisabled(true);\r\n            setFloorList([]);\r\n            setDeskList([]);\r\n        }\r\n    };\r\n\r\n    const handleDeskChange = (event) => {\r\n        setDesk(event.target.value);\r\n    }\r\n\r\n    const handleFromChange = (event) => {\r\n        setFrom(event.target.value);\r\n\r\n        const day = new Date(event.target.value)\r\n        const toDay = new Date(to)\r\n        if (day > toDay) {\r\n            setTo(event.target.value)\r\n        }\r\n    }\r\n\r\n    const handleToChange = (event) => {\r\n        setTo(event.target.value);\r\n\r\n        const day = new Date(from)\r\n        const toDay = new Date(event.target.value)\r\n        if (day > toDay) {\r\n            setFrom(event.target.value)\r\n        }\r\n    }\r\n\r\n    const search = () => {\r\n\r\n        var deskParam = ['0', '0']\r\n        var officeParam = ['0', '0']\r\n\r\n        if (desk.includes('-')) {\r\n            deskParam = desk.split(['-']);\r\n        }\r\n        if (office.includes('-')) {\r\n            officeParam = office.split(['-']);\r\n        }\r\n\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        var raw = JSON.stringify({ \"desk_id\": String(deskParam[1]), \"floor_num\": Number(deskParam[0]), \"office_id\": Number(officeParam[1]), \"office_location\": String(officeParam[0]), \"start_date\": from, \"end_date\": to });\r\n\r\n        console.log(raw);\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(Endpoint + \"/desk/getOpenDesks\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                const res = JSON.parse(result)\r\n                console.log(res)\r\n                setDeskResults(res)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    // TODO GET EMPLOYEE ID\r\n    const makeReservation = (deskObj) => {\r\n        var day = new Date(from)\r\n        var toDay = new Date(to)\r\n        while (day <= toDay) {\r\n            const newDay = day.setDate(day.getDate() + 1);\r\n            day = new Date(newDay)\r\n\r\n            const thisDate = day.getFullYear() + \"-\" + appendLeadingZeroes(day.getMonth() + 1) + \"-\" + appendLeadingZeroes(day.getDate());\r\n            console.log(thisDate);\r\n\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n            var raw = JSON.stringify({ \"employee_id\": 329, \"desk_id\": String(deskObj.desk_id), \"floor_num\": Number(deskObj.fk_floor_num), \"office_id\": Number(deskObj.fk_office_id), \"office_location\": String(deskObj.fk_office_location), \"date\": thisDate });\r\n\r\n            var requestOptions = {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: 'follow'\r\n            };\r\n\r\n            fetch(Endpoint + \"/reservation\", requestOptions)\r\n                .then(response => response.text())\r\n                .then(result => console.log(result))\r\n                .catch(error => console.log('error', error));\r\n        }\r\n        handleClose();\r\n        search();\r\n    }\r\n\r\n    const getEmployeeCount = (deskObj) => {\r\n        console.log(from);\r\n        console.log(to);\r\n        //var startDate = new Date(from);\r\n        //var endDate = new Date(to);\r\n        //console.log(startDate);\r\n        //console.log(endDate);\r\n        if (to >= from) {\r\n            //const startFullDate = startDate.getFullYear() + \"-\" + appendLeadingZeroes(startDate.getMonth() + 1) + \"-\" + appendLeadingZeroes(startDate.getDay());\r\n            //const endFullDate = endDate.getFullYear() + \"-\" + appendLeadingZeroes(endDate.getMonth() + 1) + \"-\" + appendLeadingZeroes(endDate.getDay());\r\n            var requestOptions = {\r\n                method: 'GET',\r\n                redirect: 'follow'\r\n            };\r\n\r\n            fetch(Endpoint + \"/reservation/getCount/\" + deskObj.office_id + \"/\" + from + \"/\" + to, requestOptions)\r\n                .then(response => response.text())\r\n                .then(result => {\r\n                    const res = JSON.parse(result)\r\n                    console.log(res[0].avg)\r\n                    setEmployeeCount(res[0].avg)\r\n                    if (res[0].avg == null) {\r\n                        setEmployeeCount(0);\r\n                    }\r\n                }).catch(error => console.log('error', error));\r\n        }\r\n        else setEmployeeCount(0); // just a placeholder else statement to account for to being earlier than from date\r\n    };\r\n\r\n\r\n    const confirmationBody = () => {\r\n        return (\r\n            <div className={classes.paper}>\r\n                <div style={{ width: '105%', marginTop: '-25px', justifyContent: 'flex-end', display: 'flex' }}>\r\n                    <IconButton size='small' onClick={handleClose}>\r\n                        <CancelIcon size=\"small\" />\r\n                    </IconButton>\r\n                </div>\r\n                <Typography className={classes.sectionTextModal}>\r\n                    {from} TO {to} RESERVATION\r\n                        </Typography>\r\n                <div style={{ width: '100%', height: '140px', justifyContent: 'center', display: 'flex', flexDirection: 'column' }}>\r\n                    <Typography className={classes.deskSectionText}>\r\n                        Office: <Typography className={classes.deskText}>\r\n                            {confirmationDesk.name}\r\n                        </Typography>\r\n                    </Typography>\r\n                    <Typography className={classes.deskSectionText}>\r\n                        Floor Number: <Typography className={classes.deskText}> {confirmationDesk.fk_floor_num}\r\n                        </Typography>\r\n                    </Typography>\r\n                    <Typography className={classes.deskSectionText}>\r\n                        Desk Number: <Typography className={classes.deskText}> {confirmationDesk.desk_id}\r\n                        </Typography>\r\n                    </Typography>\r\n                    <Typography className={classes.deskSectionText}>\r\n                        Estimated Number of People: <Typography className={classes.deskText}>\r\n                        {employeeCount}\r\n                                                </Typography>\r\n                    </Typography>\r\n                </div>\r\n                <Typography className={classes.confirmationModalText}>\r\n                    Do you want to confirm this reservation?\r\n                                            </Typography>\r\n                <div style={{ width: '100%', marginTop: '10px', justifyContent: 'center', display: 'flex' }}>\r\n                    <Button className={classes.reserveButton} onClick={() => {\r\n                        makeReservation(confirmationDesk);\r\n                    }}>Confirm</Button>\r\n                </div>\r\n            </div>)\r\n    };\r\n\r\n    const floorplanBody = () => {\r\n        const officeObj = officeList.find((item) => (item.office_location + \"-\" + item.office_id) === office);\r\n        const officeName = officeObj !== undefined ? officeObj.name : '';\r\n\r\n        return (\r\n            <div className={classes.floorplan}>\r\n                <div style={{ width: '102%', marginTop: '-25px', justifyContent: 'flex-end', display: 'flex' }}>\r\n                    <IconButton size='small' onClick={handleFloorplanClose}>\r\n                        <CancelIcon size=\"small\" />\r\n                    </IconButton>\r\n                </div>\r\n                <Typography className={classes.sectionTextModal}>\r\n                    {officeName}\r\n                </Typography>\r\n                <div style={{ width: '100%', justifyContent: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                    <div style={{ justifyContent: 'center', display: 'flex', flexDirection: 'column' }}>\r\n                        {floorList.map((option) => (\r\n                            <Button className={classes.FloorText}>\r\n                                Floor {option.floor_num}\r\n                            </Button>\r\n                        ))}\r\n                    </div>\r\n                    <div>\r\n                        <img src={Floorplan} alt=\"Floorplan\" style={{ height: '45vh', marginLeft: '50px' }} />\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.background}>\r\n            <Grid container direction='column' justify='center' alignItems='center'>\r\n                <Grid container justify='center' alignItems='center' className={classes.sectionSpacing}>\r\n                    <Grid item xs={3} className={classes.titleLines} />\r\n                    <Grid item xs={1}>\r\n                        <Typography className={classes.titleText}>\r\n                            UPCOMING RESERVATIONS\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3} className={classes.titleLines} />\r\n                </Grid>\r\n                <Grid container justify='center' alignItems='center' className={classes.sectionSpacing}>\r\n                    <Grid item xs={7}>\r\n                        <List>\r\n                            {deskResults.map((option) => (\r\n                                <ListItem style={{ backgroundColor: '#E5E5E5', height: '150px', marginBottom: '10px' }}>\r\n                                    <div style={{ width: '25%', height: '140px', alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: 'column' }}>\r\n                                        <ListItemIcon style={{ width: '100px', height: '100px', backgroundColor: '#00ADEF', alignItems: 'center', justifyContent: 'center', borderRadius: 100 }}>\r\n                                            <DesktopMacIcon />\r\n                                        </ListItemIcon>\r\n                                        <Typography className={classes.officeText}>\r\n                                            {option.fk_office_location + option.fk_office_id + \"-\" + option.fk_floor_num + option.desk_id}\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <Divider orientation='vertical' style={{ backgroundColor: 'white', height: '129px', width: '3px' }} />\r\n                                    <div style={{ width: '55%', height: '140px', alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                                        <div style={{ width: '40%', height: '140px', justifyContent: 'center', display: 'flex', flexDirection: 'column' }}>\r\n                                            <Typography className={classes.deskSectionText}>\r\n                                                OFFICE: <Typography className={classes.deskText}>\r\n                                                {option.office_location} // TODO: Add full location\r\n                                            </Typography>\r\n                                            </Typography>\r\n                                            <Typography className={classes.deskSectionText}>\r\n                                                DESK ID: <Typography className={classes.deskText}>\r\n                                                {option.desk_id} // TODO: Add real desk ID\r\n                                            </Typography>\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Divider orientation='vertical' style={{ backgroundColor: 'black', height: '129px', width: '1px' }} />\r\n                                    <div style={{ width: '20%', height: '140px', alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: 'column' }}>\r\n                                        <Button className={classes.cancelButton} onClick={handleOpen}>Cancel</Button>\r\n                                    </div>\r\n                                    <Modal\r\n                                        open={open}\r\n                                        onClose={handleClose}\r\n                                    >\r\n                                        {confirmationBody(option)}\r\n                                    </Modal>\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Grid container justify='center' alignItems='center' className={classes.sectionSpacing}>\r\n                    <Grid item xs={3} className={classes.titleLines} />\r\n                    <Grid item xs={1}>\r\n                        <Typography className={classes.titleText}>\r\n                            RESERVE\r\n                    </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3} className={classes.titleLines} />\r\n                </Grid>\r\n                <Grid container justify='center' alignItems='center' className={classes.sectionSpacing}>\r\n                    <Grid item xs={3}>\r\n                        <Typography className={classes.sectionText}>\r\n                            OFFICE\r\n                        </Typography>\r\n                        <TextField id=\"outlined-basic\" label=\"\" variant=\"outlined\" select onChange={handleOfficeChange} value={office} className={classes.inputBoxes}>\r\n                            <MenuItem key={'All'} value={'All'}>\r\n                                All\r\n                                </MenuItem>\r\n                            {officeList.map((option) => (\r\n                                <MenuItem key={option.office_location + \"-\" + String(option.office_id)} value={option.office_location + \"-\" + String(option.office_id)}>\r\n                                    {option.name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography className={classes.sectionText}>\r\n                            DESK NUMBER\r\n                        </Typography>\r\n                        <TextField id=\"outlined-basic\" label=\"\" variant=\"outlined\" select onChange={handleDeskChange} value={desk} className={classes.inputBoxes}>\r\n                            <MenuItem key={'All'} value={'All'}>\r\n                                All\r\n                                </MenuItem>\r\n                            {deskList.map((option) => (\r\n                                <MenuItem key={option.fk_floor_num + \"-\" + option.desk_id} value={option.fk_floor_num + \"-\" + option.desk_id}>\r\n                                    {option.fk_floor_num + \"-\" + option.desk_id}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </Grid>\r\n                    <Grid item xs={1} />\r\n                </Grid>\r\n                <Grid container justify='center' alignItems='center' className={classes.sectionSpacing}>\r\n                    <Grid item xs={7}>\r\n                        <Button className={classes.actionButton} onClick={handleFloorplanOpen} disabled={officeDisabled}>Floorplan</Button>\r\n                        <Modal\r\n                            open={floorplan}\r\n                            onClose={handleFloorplanClose}\r\n                        >\r\n                            {floorplanBody()}\r\n                        </Modal>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify='center' alignItems='flex-end' className={classes.sectionSpacing}>\r\n                    <Grid item xs={3}>\r\n                        <Typography className={classes.sectionText}>\r\n                            FROM\r\n                        </Typography>\r\n                        <TextField id=\"outlined-basic\" variant=\"outlined\" type=\"date\" className={classes.inputBoxes} onChange={handleFromChange} value={from} defaultValue={from} />\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Typography className={classes.sectionText}>\r\n                            TO\r\n                        </Typography>\r\n                        <TextField id=\"outlined-basic\" variant=\"outlined\" type=\"date\" className={classes.inputBoxes} onChange={handleToChange} value={to} defaultValue={to} />\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <button onClick={search} style={{ backgroundColor: 'transparent', border: 'none' }}><img src={Search} alt=\"Search\" style={{ height: '50px' }} /></button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify='center' alignItems='center' className={classes.sectionSpacing}>\r\n                    <Grid item xs={7}>\r\n                        <List>\r\n                            {deskResults.map((option) => (\r\n                                <ListItem style={{ backgroundColor: '#E5E5E5', height: '150px', marginBottom: '10px' }}>\r\n                                    <div style={{ width: '25%', height: '140px', alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: 'column' }}>\r\n                                        <ListItemIcon style={{ width: '100px', height: '100px', backgroundColor: '#00ADEF', alignItems: 'center', justifyContent: 'center', borderRadius: 100 }}>\r\n                                            <DesktopMacIcon />\r\n                                        </ListItemIcon>\r\n                                        <Typography className={classes.officeText}>\r\n                                            {option.fk_office_location + option.fk_office_id + \"-\" + option.fk_floor_num + option.desk_id}\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <Divider orientation='vertical' style={{ backgroundColor: 'white', height: '129px', width: '3px' }} />\r\n                                    <div style={{ width: '55%', height: '140px', alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                                        <div style={{ width: '40%', height: '140px', justifyContent: 'center', display: 'flex', flexDirection: 'column' }}>\r\n                                            <Typography className={classes.deskSectionText}>\r\n                                                FLOOR: <Typography className={classes.deskText}>\r\n                                                    {option.fk_floor_num}\r\n                                                </Typography>\r\n                                            </Typography>\r\n                                            <Typography className={classes.deskSectionText}>\r\n                                                TYPE: <Typography className={classes.deskText}>\r\n                                                    Desk\r\n                                                </Typography>\r\n                                            </Typography>\r\n                                            <Typography className={classes.deskSectionText}>\r\n                                                CAPACITY: <Typography className={classes.deskText}>\r\n                                                    {option.capacity}\r\n                                                </Typography>\r\n                                            </Typography>\r\n                                        </div>\r\n                                        <div style={{ width: '40%', height: '140px', justifyContent: 'center', display: 'flex', flexDirection: 'column' }}>\r\n                                            <Typography className={classes.deskSectionText}>\r\n                                                ADDRESS: <Typography className={classes.deskText}>\r\n                                                    {option.address}\r\n                                                </Typography>\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Divider orientation='vertical' style={{ backgroundColor: 'white', height: '129px', width: '3px' }} />\r\n                                    <div style={{ width: '20%', height: '140px', alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: 'column' }}>\r\n                                        <Button className={classes.reserveButton} onClick={() => {\r\n                                            getEmployeeCount(option);\r\n                                            handleOpen(option)\r\n                                            }}>Reserve Now</Button>\r\n                                    </div>\r\n                                    <Modal\r\n                                        open={open}\r\n                                        onClose={handleClose}\r\n                                    >\r\n                                        {confirmationDesk !== undefined ? confirmationBody() : null}\r\n                                    </Modal>\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </Grid>\r\n                </Grid>\r\n                {/* <Grid container justify='center' alignItems='center' className={classes.sectionSpacing}>\r\n                    <Button className={classes.actionButton} onClick={() => {\r\n                        console.log(\"Loading More!\");\r\n                    }}>Load More</Button>\r\n                </Grid> */}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reservation;","C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\components\\reservation\\BookingsCalendar.jsx",[],"C:\\Users\\mingj\\courses\\cs319\\DeskBuddy\\frontend\\src\\config\\Constants.jsx",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":42,"nodeType":"54","messageId":"55","endLine":2,"endColumn":48},{"ruleId":"52","severity":1,"message":"56","line":7,"column":8,"nodeType":"54","messageId":"55","endLine":7,"endColumn":24},{"ruleId":"57","severity":1,"message":"58","line":179,"column":8,"nodeType":"59","endLine":179,"endColumn":10,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":464,"column":73,"nodeType":"63","endLine":465,"endColumn":45},{"ruleId":"61","severity":1,"message":"62","line":469,"column":65,"nodeType":"63","endLine":470,"endColumn":45},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'BookingsCalendar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.","ArrayExpression",["66"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [search]",{"range":"69","text":"70"},[5078,5080],"[search]"]